#https://access.crunchydata.com/documentation/postgres-operator/5.0.3/tutorial/resize-cluster/
#https://access.crunchydata.com/documentation/postgres-operator/5.0.3/tutorial/disaster-recovery/
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: gba
spec:
  openshift: true
  # this block is useful only if you also have monitoring set up for your cluster.
  # this example installation is intended to be as small as possible, so it has been removed.
  # however, this block remains as an example if you would like to add monitoring to your cluster.
  #
  # monitoring:
  #   pgmonitor:
  #     # this stuff is for the "exporter" container in the "gba-pg1" set of pods
  #     exporter:
  #       resources:
  #         requests:
  #           cpu: 50m
  #           memory: 32Mi
  #         limits:
  #           cpu: 100m
  #           memory: 64Mi
  postgresVersion: 15
  postGISVersion: "3.3"
  image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-postgres-gis:ubi8-15.2-3.3-0
  imagePullPolicy: IfNotPresent
  instances:
    - name: pg1
      replicas: 2
      minAvailable: 2
      resources:
        requests:
          cpu: 250m
          memory: 128Mi
        limits:
          cpu: 500m
          memory: 512Mi
      sidecars:
        replicaCertCopy:
          resources:
            requests:
              cpu: 50m
              memory: 16Mi
            limits:
              cpu: 100m
              memory: 32Mi
      dataVolumeClaimSpec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: 13Gi
        storageClassName: netapp-block-standard
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: gba
                  postgres-operator.crunchydata.com/instance-set: pg1
  users:
    # - name: gba_user
    #   options: "NOLOGIN"
    # - name: gba_viewer
    #   options: "NOLOGIN"
    - name: gba
      options: "LOGIN NOSUPERUSER inherit CREATEDB CREATEROLE NOREPLICATION"
      databases:
        - gba
    # - name: proxy_gba
    #   options: "LOGIN NOSUPERUSER inherit CREATEDB NOCREATEROLE NOREPLICATION"
  backups:
    pgbackrest:
      configuration:
      - secret:
          name: gba-pgbackrest-s3-creds
      global:
        repo1-retention-full: "1"
      repos:
      - name: repo1
        schedules:
          # Full backup every day at 8:00am UTC
          full: "0 * * * *" # only run in January
          #full: "0 8 * * *"
          # Incremental backup every hours, except at 8am UTC (when the full backup is running)
          incremental: "30 * * * *" # only run in January
          #incremental: "0 0,1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 * * *"
          #incremental: "0 0,4,12,16,20 * 1 *" # only run in January
#        s3:
#          endpoint: nrs.objectstore.gov.bc.ca
#          bucket: dszqxc
#          region: bc # Not used when it's not amazon
        volume:
          volumeClaimSpec:
            accessModes:
            - "ReadWriteOnce"
            resources:
              requests:
                storage: 33Gi
            storageClassName: netapp-file-backup
      repoHost:
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      jobs:
        resources:
          requests:
            cpu: 25m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi
      restore:
        repoName: repo1
        resources:
          requests:
            cpu: 25m
            memory: 32Mi
          limits:
            cpu: 50m
            memory: 64Mi
      sidecars:
        pgbackrest:
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
        pgbackrestConfig:
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
      manual:
        repoName: repo1
        options:
         - --type=full
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        parameters:
          wal_compression: 'pglz'
          shared_buffers: '16MB'
          wal_buffers: '-1'
          min_wal_size: '32MB'
          max_wal_size: '64MB'
          synchronous_commit: 'on'
          archive_mode: 'off'
  proxy:
    pgBouncer:
      image: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-pgbouncer:ubi8-1.18-0
      config:
        global:
          client_tls_sslmode: disable
      replicas: 2
      resources:
        requests:
          cpu: 50m
          memory: 32Mi
        limits:
          cpu: 100m
          memory: 64Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  postgres-operator.crunchydata.com/cluster: gba
                  postgres-operator.crunchydata.com/role: pgbouncer
